// 设置获取今日和昨日的数据
Date.prototype.format = function (fmt) {
    var o = {
        "M+": this.getMonth() + 1, //月份
        "d+": this.getDate(), //日
        "h+": this.getHours(), //小时
        "m+": this.getMinutes(), //分
        "s+": this.getSeconds(), //秒
        "q+": Math.floor((this.getMonth() + 3) / 3), //季度
        "S": this.getMilliseconds() //毫秒
    };
    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    for (var k in o)
        if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
    return fmt;
}
let set_yesterday = new Date();
set_yesterday.setDate(set_yesterday.getDate() -2);
let yesterday = set_yesterday.format("yyyy-MM-dd");

let set_today = new Date();
set_today.setDate(set_today.getDate()-1);
let today= set_today.format("yyyy-MM-dd");



const map = new BMap.Map("container");

let centre_point = new BMap.Point(118.779425,31.939229);
map.centerAndZoom(centre_point, 10);

map.addControl(new BMap.NavigationControl({type: BMAP_NAVIGATION_CONTROL_SMALL}));
map.enableScrollWheelZoom();

let boundary = new BMap.Boundary();

const url = "data/infection.json"
const request = new XMLHttpRequest();
request.open("get", url);
request.send(null);
request.onload = function () {
    if (request.status === 200) {
        // 获取区域数据
        let districts = JSON.parse(request.responseText)[today];
        const sort_districts = Object.keys(districts).sort(function(a,b){return districts[b]-districts[a]});
        // console.log(sort_districts);



        for(let each_district in sort_districts){

            let district_name = sort_districts[each_district]

            let district_fullname = "南京市" + district_name;
            let current_value = districts[district_name];

            // 浮窗显示
            let info = document.getElementById('infection');
            let district_info = document.createElement("span");
            district_info.innerHTML = `${district_name}: ${current_value}例`;
            district_info.setAttribute('id','district-name');
            info.appendChild(district_info);



            // 地图色块显示

            let district_opacity = 0;
            let district_color = '';
            let boundary_color = ''

            // 设置区域透明度
            if(current_value > 0){
                district_opacity = 0.7;
            }

            // 设置区域底色和边界颜色
            if (current_value >= 50){
                district_color = "#cb2823";
                boundary_color = "#82110d";
            }
            else if (current_value >= 15 && current_value < 50){
                district_color = "#c46640";
                boundary_color = "#931c0d";
            }
            else if (current_value >= 2 && current_value < 15) {
                district_color = "#ff8b4f";
                boundary_color = "#ba4813";
            }
            else if (current_value >= 1 && current_value < 2) {
                district_color = "rgb(255,211,134)";
                boundary_color = "#c46640";
            }
            else{
                district_color = "#b0e2c3"
                boundary_color = "#147430"
            }

            // 获取行政区域
            boundary.get(district_fullname, function(result){
                // 行政区域的点有多少个
                let count = result.boundaries.length;

                //建立多边形覆盖物
                for(var i = 0; i < count; i++){
                    var ply = new BMap.Polygon(result.boundaries[i], {strokeWeight: 2, strokeColor: boundary_color, fillColor: district_color, fillOpacity: district_opacity});

                    //添加覆盖物
                    map.addOverlay(ply);
                }

            });
        }
    }
}